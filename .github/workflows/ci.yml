name: CI

on:
  pull_request:
    branches:
      - "*"

  push:
    branches:
      - main
      - test

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:9.6.16-alpine
        ports: ["5432:5432"]
        env:
          POSTGRES_DB: quote_editor_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 15s
          --health-retries 5
      redis:
        image: redis
        ports: ["6379:6379"]
        options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0

      - uses: actions/setup-node@v2-beta
        with:
          node-version: "12"

      - uses: nanasess/setup-chromedriver@master

      - name: Build and run tests
        env:
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/quote_editor_test"
          BUNDLER_VERSION: 2.5.7
          DOCKER_TLS_CERTDIR: ""
          RAILS_ENV: test
          RAILS_DISABLE_TEST_LOG: "true"
        run: |
          sudo apt-get update -qqy
          sudo apt-get -yqq install postgresql postgresql-client libpq-dev xvfb unzip libcurl4 libcurl3-gnutls libcurl4-openssl-dev
          gem install bundler -v "$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1)"
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          bin/rails db:schema:load --trace
          bin/rails db:migrate
          bin/rails test

      - name: Capybara failure
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: capybara-failure
          path: tmp/capybara/

  deploy_dev:
    needs: [build_and_test]
    if: github.ref == 'refs/heads/test'
    runs-on: ubuntu-latest
    concurrency: dev
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0

      - name: "Deploy dev"
        run: |
          echo: "Prettend deploy to DEV"

  deploy_staging:
    needs: [build_and_test]
    if: github.ref == 'refs/heads/test'
    runs-on: ubuntu-latest
    concurrency: staging
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0

      - name: "Deploy staging"
        run: |
          echo: "Prettend deploy to STAGING"

  deploy_production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    concurrency: production
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0

      - name: "Deploy production"
        run: |
          echo: "Prettend deploy to PRODUCTION"
